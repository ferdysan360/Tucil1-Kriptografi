{"version":3,"sources":["Backend/FullVigenereBackend.js","Components/FullVigenere/FullVigenere.js","Backend/StandardVigenereBackend.js","Components/StandardVigenere/StandardVigenere.js","Backend/AutoKeyVigenereBackend.js","Components/AutoKeyVigenere/AutoKeyVigenere.js","Backend/ExtendedVigenereBackend.js","Components/ExtendedVigenere/ExtendedVigenere.js","Backend/PlayfairBackend.js","Components/Playfair/Playfair.js","Backend/SuperEncryptionBackend.js","Components/SuperEncryption/SuperEncryption.js","Backend/AffineBackend.js","Components/Affine/Affine.js","Backend/HillBackend.js","Components/Hill/Hill.js","Backend/EnigmaMachine.js","Backend/EnigmaBackend.js","Components/Enigma/Enigma.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["cleanText","text","result","i","length","charCodeAt","charAt","getKeys","charNum","push","splitByFive","FullVigenere","fileReader","useState","value","setValue","table","setTable","useEffect","array","rng","seedrandom","sort","quick","arrayTemp","slice","generateTable","sourceText","setSourceText","keyText","setKeyText","resultText","setResultText","handleFileRead","e","preventDefault","content","classes","makeStyles","theme","buttongroup","margin","spacing","textfield","width","textarea","divider","marginTop","marginBottom","input","display","outputtype","useStyles","Typography","variant","TextareaAutosize","aria-label","placeholder","rowsMin","rowsMax","className","onChange","target","accept","id","multiple","type","file","files","FileReader","onloadend","readAsText","htmlFor","Button","color","component","TextField","label","onClick","plainText","key","cipherText","keyCodes","toLowerCase","currentKey","String","fromCharCode","encode","toUpperCase","j","found","decode","Divider","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","data","filename","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","StandardVigenere","AutoKeyVigenere","end","ExtendedVigenere","outputType","setOutputType","sourceBytes","setSourceBytes","resultBytes","setResultBytes","inputFile","setInputFile","console","log","inputtype","readAsArrayBuffer","Int8Array","encodeFile","decodeFile","buffer","newFilename","split","cleanUpKey","resultArray","currentChar","includes","createKeyMatrix","keyArray","charValue","resultMatrix","matrixRow","tempResult","tempPair","getEncodePairs","keyMatrix","sourcePair","resultPair","firstLocation","getLocation","secondLocation","getDecodePairs","letter","resultLocation","Playfair","textPairs","encodedPair","decodePair","transform","transposeKey","SuperEncryption","transposeKeyText","setTransposeKeyText","vigenereKey","parseInt","padNum","paddings","vigenereText","superEncode","Math","round","transposedText","superDecode","Affine","affineKeyText","setAffineKeyText","row","style","justifyContent","affineKey","keyNum","affineKeyNum","reverseAffineKeyNum","totalLetter","modInverse","Hill","errorText","setErrorText","resultErrorText","setResultErrorText","validateKeyInput","size","sqrt","N","keyElement","shift","keyMathMatrix","matrix","ceil","arrayPlainText","substring","arrayCipherText","multiply","_data","determinant","det","tempDeterminant","gcd","validateDeterminant","error","inv","hillKey","EnigmaMachine","this","rotors","reflector","EnigmaReflector","plugboard","EnigmaPlugboard","seed","spinCount","shiftLetter","newRotor","EnigmaRotor","reflectorNum","swappers","plugboardExecute","searchCipher","reflect","searchPlain","rotateRotors","spinRotor","rotorShiftNum","leftRotor","rightRotor","require","shuffle","unshift","pop","rotorKey","rotorIdx","setPlugboard","resetPlugboard","swapperList","firstCharNum","secondCharNum","reflectorNumber","setReflector","setReflectorInner","swapArrayElement","reflectorKey","resetReflector","idxOne","idxTwo","arraySource","valOne","execute","enigmaReflectorText","enigmaPlugboardText","enigmaRotorText","machine","newRotors","addRotor","getMachine","executeEnigma","Enigma","setEnigmaReflectorText","setEnigmaPlugboardText","setEnigmaRotorText","Home","cipherId","setCipherId","root","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","flexGrow","padding","title","marginLeft","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","paper","List","map","index","ListItem","button","handleChange","selected","ListItemText","primary","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9f8d9dd8.chunk.js","sourcesContent":["import seedrandom from 'seedrandom';\r\n\r\n/**\r\n * Create table\r\n * Randomize 26 rows of matrix\r\n * \r\n * @returns {Object} table\r\n */\r\nexport function generateTable() {\r\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n        10, 11, 12, 13, 14, 15, 16, 17,\r\n        18, 19, 20, 21, 22, 23, 24, 25\r\n    ];\r\n\r\n    let table = [];\r\n    var rng = seedrandom();\r\n\r\n    for (let i = 0; i < 26; i++) {\r\n        array.sort(() => rng.quick() - 0.5);\r\n        let arrayTemp = array.slice();\r\n        table.push(arrayTemp);\r\n    }\r\n\r\n    return table;\r\n}\r\n\r\n/**\r\n * Encode Full Vigenere\r\n * Cj = table[Ki][Pj]\r\n * Dengan table berupa tabel yang sudah diinisalisasi terlebih dahulu\r\n * \r\n * @param {String} plainText \r\n * @param {String} key \r\n * @param {Object} table \r\n * @returns {String} cipherText\r\n */\r\nexport function encode(plainText, key, table) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = table[currentKey][charNum];\r\n            //console.log(charNum)\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/**\r\n * Decode Full Vigenere\r\n * Pj = cari di table j dengan nilai table[Ki][j] = Cj\r\n * Dengan table berupa tabel yang sudah diinisalisasi terlebih dahulu\r\n * \r\n * @param {String} cipherText \r\n * @param {String} key \r\n * @param {Object} table \r\n * @returns {String} plainText\r\n */\r\nexport function decode(cipherText, key, table) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            let j = 0;\r\n            let found = false;\r\n            while (!found && j < 26) {\r\n                if (table[currentKey][j] === charNum) {\r\n                    found = true;\r\n                    charNum = j;\r\n                }\r\n                else {\r\n                    j++;\r\n                }\r\n            }\r\n            // console.log(charNum);\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n\r\n    return result;\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { generateTable, encode, decode, splitByFive } from '../../Backend/FullVigenereBackend.js';\r\n\r\nfunction FullVigenere() {\r\n\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [table,  setTable] = useState([]);\r\n\r\n    let fileReader;\r\n\r\n    useEffect(() => {\r\n        setTable(generateTable())\r\n    }, [])\r\n\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText, table));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText, table));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Full Vigenere Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FullVigenere;\r\n","/**\r\n * Encode Standard Vigenere\r\n * Cj = (Pj + Ki) mod 26\r\n * \r\n * @param {String} plainText \r\n * @param {String} key \r\n * @returns {String} cipherText\r\n */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum + currentKey) % 26) + 26) % 26;\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return cipherText;\r\n}\r\n\r\n/**\r\n * Decode Standard Vigenere\r\n * Pj = (Cj - Ki) mod 26\r\n * \r\n * @param {String} cipherText\r\n * @param {String} key\r\n * @returns {String} plainText\r\n */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum - currentKey) % 26) + 26) % 26;\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/StandardVigenereBackend.js';\r\n\r\nfunction StandardVigenere() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Standard Vigenere Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StandardVigenere;\r\n","/**\r\n * Encode AutoKey Vigenere\r\n * Cj = (Pj + Ki) mod 26\r\n * Dengan key diperpanjang dengan Pj setelah \r\n * \r\n * @param {String} plainText \r\n * @param {String} key \r\n * @returns {String} cipherText\r\n */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    let end = plainText.length - keyCodes.length;\r\n    for (let i = 0; i < end; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            keyCodes.push(charNum);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum + currentKey) % 26) + 26) % 26;\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/**\r\n * Decode AutoKey Vigenere\r\n * Pj = (Cj - Ki) mod 26\r\n * Dengan Key akan diperpanjangan dengan hasil translate\r\n * \r\n * @param {String} cipherText \r\n * @param {String} key\r\n * @returns {String} plainText \r\n */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        let currentKey = keyCodes[i];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum - currentKey) % 26) + 26) % 26;\r\n            // console.log(charNum);\r\n            if (keyCodes.length < cipherText.length) {\r\n                keyCodes.push(charNum);\r\n            }\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/AutoKeyVigenereBackend.js';\r\n\r\nfunction AutoKeyVigenere() {\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Auto-Key Vigenere Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText} />\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)} />\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AutoKeyVigenere;\r\n","/**\r\n * Encode Extended Vigenere Text\r\n * Cj = (Pj + Ki) mod 256\r\n * \r\n * @param {String} plainText \r\n * @param {String} key \r\n * @returns {String} cipherText\r\n */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i);\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum + currentKey) % 256) + 256) % 256;\r\n        cipherText += String.fromCharCode(charNum);\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/**\r\n * Decode Extended Vigenere Text\r\n * Pj = (Cj - Ki) mod 256\r\n * \r\n * @param {String} cipherText\r\n * @param {String} key \r\n * @returns {String} plainText\r\n */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i);\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum - currentKey) % 256) + 256) % 256;\r\n        plainText += String.fromCharCode(charNum);\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\n/**\r\n * Encode Extended Vigenere File\r\n * Cj = (Pj + Ki) mod 256\r\n * Uses Int8Array as the byte arrays\r\n * \r\n * @param {String} plainText \r\n * @param {String} key \r\n * @returns {String} cipherText\r\n */\r\nexport function encodeFile(plainText, key) {\r\n    let cipherText = [];\r\n    plainText = new Int8Array(plainText);\r\n    \r\n    let keyCodes = getKeys(key);\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText[i];\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum + currentKey) % 256) + 256) % 256;\r\n        cipherText.push(charNum);\r\n    }\r\n    \r\n    let int8cipherText = new Int8Array(cipherText);\r\n    return int8cipherText;\r\n}\r\n\r\n/**\r\n * Decode Extended Vigenere Text\r\n * Pj = (Cj - Ki) mod 256\r\n * Using Int8Array as byte arrays\r\n * \r\n * @param {String} cipherText\r\n * @param {String} key \r\n * @returns {String} plainText\r\n */\r\nexport function decodeFile(cipherText, key) {\r\n    let plainText = [];\r\n    cipherText = new Int8Array(cipherText);\r\n    \r\n    let keyCodes = getKeys(key);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText[i];\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum - currentKey) % 256) + 256) % 256;\r\n        plainText.push(charNum);\r\n    }\r\n\r\n    let int8plainText = new Int8Array(plainText);\r\n    return int8plainText;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i);\r\n        result.push(charNum);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, encodeFile, decodeFile, splitByFive } from '../../Backend/ExtendedVigenereBackend.js';\r\n\r\nfunction ExtendedVigenere() {\r\n    const [outputType, setOutputType] = useState(\"nospaces\");\r\n    const [value, setValue] = useState(\"text\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [sourceBytes, setSourceBytes] = useState(null);\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    const [resultBytes, setResultBytes] = useState(null);\r\n    const [inputFile, setInputFile] = useState(null);\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        data = data.buffer;\r\n        console.log(data);\r\n        let newFilename = filename.split('.')[0];\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, newFilename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = newFilename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n        \r\n        console.log(fileReader)\r\n        const content = fileReader.result;\r\n        setSourceBytes(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        setInputFile(file)\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsArrayBuffer(file);\r\n        console.log(file);\r\n        setResultBytes(null);\r\n    }\r\n    \r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Test encode\");\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n    \r\n    const handleDecode = (e) => {\r\n        console.log(\"Test decode\");\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n    \r\n    const handleEncodeFile = (e) => {\r\n        e.preventDefault();\r\n        setResultBytes(encodeFile(sourceBytes, keyText));\r\n    }\r\n\r\n    const handleDecodeFile = (e) => {\r\n        e.preventDefault();\r\n        setResultBytes(decodeFile(sourceBytes, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const handleOutputTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setOutputType(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        inputtype: {\r\n            marginTop: '20px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Extended Vigenere Cipher</Typography>\r\n            <div className={classes.inputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Input Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"text\" control={<Radio />} label=\"Text Input\" />\r\n                            <FormControlLabel value=\"file\" control={<Radio />} label=\"File Input\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"text\" ? \r\n                <div>\r\n                    <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText} />\r\n                </div>\r\n                :\r\n                <div className={classes.buttongroup}>\r\n                    <input\r\n                        className={classes.input}\r\n                        id=\"contained-button-file\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={e => handleFileChosen(e.target.files[0])}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                    <div>\r\n                        {\r\n                            inputFile === null ? \"No File Selected\"\r\n                            : \"File uploaded: \" + inputFile.name\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)} />\r\n            </div>\r\n            {\r\n                value === \"text\" ?\r\n                <div className={classes.buttongroup}>\r\n                    <Button variant=\"contained\" onClick={handleEncode}>\r\n                        Encrypt\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleDecode}>\r\n                        Decrypt\r\n                    </Button>\r\n                </div>\r\n                :\r\n                <div className={classes.buttongroup}>\r\n                    <Button variant=\"contained\" onClick={handleEncodeFile}>\r\n                        Encrypt File\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleDecodeFile}>\r\n                        Decrypt File\r\n                    </Button>\r\n                </div>\r\n            }\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            {\r\n                value === \"text\" ?\r\n                <div>\r\n                    <div className={classes.outputtype}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                            <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={outputType} onChange={handleOutputTypeChange}>\r\n                                <div>\r\n                                    <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                                    <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                                </div>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                    {\r\n                        outputType === \"nospaces\" ?\r\n                            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                            :\r\n                            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)} />\r\n                    }\r\n                </div>\r\n                :\r\n                <div>\r\n                    <div className={classes.buttongroup}>\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultBytes, \"crypt\" + inputFile.name, inputFile.type)}>\r\n                            Save To File\r\n                        </Button>\r\n                        <div>\r\n                            {\r\n                                resultBytes === null ? \"No File Result\"\r\n                                    : \"File ready: crypt\" + inputFile.name.split('.')[0]\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExtendedVigenere;\r\n","/**\r\n * Encode Playfair Cipher\r\n * Buat matriks 5x5 lalu memanggil getEncodePairs untuk enkripsi setiap huruf\r\n * \r\n * @param {String} plainText \r\n * @param {String} key\r\n * @returns cipherText \r\n */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = cleanUpKey(key);\r\n    let keyMatrix = createKeyMatrix(keyCodes);\r\n    let textPairs = cleanText(plainText);\r\n\r\n    for (let i = 0; i < textPairs.length; i++) {\r\n        let encodedPair = getEncodePairs(keyMatrix, textPairs[i]);\r\n        cipherText += encodedPair[0];\r\n        cipherText += encodedPair[1];\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/**\r\n * Decode Playfair Cipher\r\n * Buat matriks 5x5 lalu memanggil getDecodePairs untuk dekripsi setiap huruf\r\n * \r\n * @param {String} cipherText \r\n * @param {String} key \r\n */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = cleanUpKey(key);\r\n    let keyMatrix = createKeyMatrix(keyCodes);\r\n    let textPairs = cleanText(cipherText);\r\n\r\n    for (let i = 0; i < textPairs.length; i++) {\r\n        let decodePair = getDecodePairs(keyMatrix, textPairs[i]);\r\n        plainText += decodePair[0];\r\n        plainText += decodePair[1];\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// Cleaning up key (switch J to I and removes letter redundancy)\r\nfunction cleanUpKey(key) {\r\n    let resultArray = [];\r\n    key = key.toUpperCase();\r\n\r\n    for (let i = 0; i < key.length; i++) {\r\n        if (key.charCodeAt(i) >= 65 && key.charCodeAt(i) <= 90) {\r\n            let currentChar = key.charAt(i);\r\n            if (key.charAt(i) === 'J') {\r\n                currentChar = 'I';\r\n            }\r\n            if (!resultArray.includes(currentChar)) {\r\n                resultArray.push(currentChar);\r\n            }\r\n        }\r\n    }\r\n\r\n    return resultArray;\r\n}\r\n\r\n/**\r\n * Membuat sebauh key matrix\r\n * Dibuat dengan menambahkan setiap huruf kecuali J\r\n * \r\n * @param {Object} keyArray\r\n * @returns resultMatrix \r\n */\r\nfunction createKeyMatrix(keyArray) {\r\n    // Fill the array\r\n    for (let i = 65; i <= 90; i++) {\r\n        let charValue = String.fromCharCode(i).charAt(0);\r\n        if (charValue !== 'J' && !keyArray.includes(charValue)) {\r\n            keyArray.push(charValue);\r\n        }\r\n    }\r\n    // Create matrix\r\n    let resultMatrix = [];\r\n    let matrixRow = [];\r\n    for (let i = 0; i < keyArray.length; i++) {\r\n        matrixRow.push(keyArray[i]);\r\n        if (i !== 0 && i % 5 === 4) {\r\n            resultMatrix.push(matrixRow);\r\n            matrixRow = [];\r\n        }\r\n    }\r\n    return resultMatrix;\r\n}\r\n\r\n/**\r\n * Clean Text khusus untuk Playfair Cipher\r\n * Digunakan bukan hanya untuk mengubah semuanya jadi Uppercase\r\n * Mengubah J menjadi I, lalu menghasilkan pairing huruf\r\n * Jika terdapat dari pair dengan huruf yang sama, maka ganti salah satu menjadi X\r\n * \r\n * @param {String} text\r\n * @returns result\r\n */\r\nfunction cleanText(text) {\r\n    let tempResult = \"\";\r\n    let result = [];\r\n\r\n    // Filtering non-alphabets and change J to I\r\n    text = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90)) {\r\n            if (text.charAt(i) === 'J') {\r\n                tempResult += 'I';\r\n            } else {\r\n                tempResult += text.charAt(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create pairs and preventing same pairs\r\n    let i = 0;\r\n    while (i < (tempResult.length - 1)) {\r\n        let tempPair = [];\r\n        tempPair.push(tempResult.charAt(i));\r\n        tempPair.push(tempResult.charAt(i + 1));\r\n\r\n        if (tempPair[0] === tempPair[1]) {\r\n            tempPair[1] = 'X';\r\n            i += 1;\r\n        } else {\r\n            i += 2;\r\n        }\r\n        result.push(tempPair);\r\n    }\r\n    if (i < tempResult.length) {\r\n        let tempPair = [];\r\n        tempPair.push(tempResult.charAt(tempResult.length - 1));\r\n        tempPair.push('X');\r\n        result.push(tempPair);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Get Encode Pairs\r\n * Encoding dalam sebuah matriks dengan aturan:\r\n * Pair dalam row sama: Geser ke kanan\r\n * Pair dalam kolom sama: Geser ke bawah\r\n * Selain itu: Cari baris pair kiri, dan kolom pair kanan; lalu pair kanan itu titik potong satu lagi\r\n * \r\n * @param {Object} keyMatrix \r\n * @param {Object} sourcePair\r\n * @returns pasangan huruf yang sudah diencode\r\n */\r\nfunction getEncodePairs(keyMatrix, sourcePair) {\r\n    let resultPair = [];\r\n\r\n    let firstLocation = getLocation(keyMatrix, sourcePair[0]);\r\n    let secondLocation = getLocation(keyMatrix, sourcePair[1]);\r\n\r\n    // Kasus dalam baris yang sama\r\n    if (firstLocation[0] === secondLocation[0]) {\r\n        resultPair.push(keyMatrix[firstLocation[0]][(firstLocation[1] + 1) % 5]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][(secondLocation[1] + 1) % 5]);\r\n    }\r\n    // Kasus dalam kolom yang sama\r\n    else if (firstLocation[1] === secondLocation[1]) {\r\n        resultPair.push(keyMatrix[(firstLocation[0] + 1) % 5][firstLocation[1]]);\r\n        resultPair.push(keyMatrix[(secondLocation[0] + 1) % 5][secondLocation[1]]);\r\n    }\r\n    // Kasus sisanya\r\n    else {\r\n        resultPair.push(keyMatrix[firstLocation[0]][secondLocation[1]]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][firstLocation[1]]);\r\n    }\r\n\r\n    return resultPair;\r\n}\r\n\r\n/**\r\n * Get Decode Pairs\r\n * Decoding dalam sebuah matriks dengan aturan:\r\n * Pair dalam row sama: Geser ke kiri\r\n * Pair dalam kolom sama: Geser ke atas\r\n * Selain itu: Cari baris pair kanan, dan kolom pair kiri; lalu pair kanan itu titik potong satu lagi\r\n * \r\n * @param {Object} keyMatrix \r\n * @param {Object} sourcePair \r\n * @returns pasangan huruf yang sudah didecode\r\n */\r\nfunction getDecodePairs(keyMatrix, sourcePair) {\r\n    let resultPair = [];\r\n\r\n    let firstLocation = getLocation(keyMatrix, sourcePair[0]);\r\n    let secondLocation = getLocation(keyMatrix, sourcePair[1]);\r\n\r\n    // Kasus dalam baris yang sama\r\n    if (firstLocation[0] === secondLocation[0]) {\r\n        resultPair.push(keyMatrix[firstLocation[0]][(firstLocation[1] + 4) % 5]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][(secondLocation[1] + 4) % 5]);\r\n    }\r\n    // Kasus dalam kolom yang sama\r\n    else if (firstLocation[1] === secondLocation[1]) {\r\n        resultPair.push(keyMatrix[(firstLocation[0] + 4) % 5][firstLocation[1]]);\r\n        resultPair.push(keyMatrix[(secondLocation[0] + 4) % 5][secondLocation[1]]);\r\n    }\r\n    // Kasus sisanya\r\n    else {\r\n        resultPair.push(keyMatrix[firstLocation[0]][secondLocation[1]]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][firstLocation[1]]);\r\n    }\r\n\r\n    return resultPair;\r\n}\r\n\r\n/**\r\n * Mendapatkan lokasi huruf di matriks pair\r\n * \r\n * @param {Object} keyMatrix \r\n * @param {String} letter \r\n * @returns lokasi dari key matrix tersebut\r\n */\r\nfunction getLocation(keyMatrix, letter) {\r\n    let resultLocation = []\r\n    for (let i = 0; i < keyMatrix.length; i++) {\r\n        for (let j = 0; j < keyMatrix[i].length; j++) {\r\n            if (keyMatrix[i][j] === letter) {\r\n                resultLocation.push(i);\r\n                resultLocation.push(j);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return resultLocation;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport {encode, decode, splitByFive} from '../../Backend/PlayfairBackend.js';\r\n\r\nfunction Playfair() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Playfair Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playfair;\r\n","import { encode, decode } from '../Backend/StandardVigenereBackend.js';\r\n\r\n/**\r\n * Super encryption\r\n * Vigenere encryption + Transform encrpytoin\r\n * \r\n * @param {String} plainText \r\n * @param {String} vigenereKey \r\n * @param {Number} transposeKey \r\n */\r\nexport function superEncode(plainText, vigenereKey, transposeKey) {\r\n    transposeKey = parseInt(transposeKey);\r\n    plainText = cleanText(plainText);\r\n    plainText = paddings(plainText, transposeKey);\r\n    console.log(plainText);\r\n    let vigenereText = encode(plainText, vigenereKey);\r\n    console.log(vigenereText);\r\n    return transform(vigenereText, transposeKey);\r\n}\r\n\r\n/**\r\n * Super decryption\r\n * Transform decryption + Vigenere decryption\r\n * \r\n * @param {String} cipherText \r\n * @param {String} vigenereKey \r\n * @param {Number} transposeKey \r\n */\r\nexport function superDecode(cipherText, vigenereKey, transposeKey) {\r\n    cipherText = cleanText(cipherText);\r\n    transposeKey = Math.round(cipherText.length / parseInt(transposeKey));\r\n    console.log(cipherText);\r\n    let transposedText = transform(cipherText, transposeKey);\r\n    console.log(transposedText);\r\n    return decode(transposedText, vigenereKey);\r\n}\r\n\r\n// Encode key length\r\nfunction paddings(text, transposeKey) {\r\n    let padNum = (transposeKey - (((text.length % transposeKey) + transposeKey) % transposeKey)) % transposeKey;\r\n    for (let i = 0; i < padNum; i++) {\r\n        text += 'X';\r\n    }\r\n    \r\n    return text;\r\n}\r\n\r\n/**\r\n * Transform encryption + decrpytion\r\n * Change column into row, vice versa\r\n * \r\n * @param {String} text \r\n * @param {Number} transposeKey \r\n */\r\nfunction transform(text, transposeKey) {\r\n    let result = \"\";\r\n    for (let i = 0; i < transposeKey; i++) {\r\n        let j = 0;\r\n        while ((i + j * transposeKey) < text.length) {\r\n            result += text.charAt(i + j * transposeKey);\r\n            j += 1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    text = text.toUpperCase();\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { superEncode, superDecode } from '../../Backend/SuperEncryptionBackend.js';\r\nimport { splitByFive } from '../../Backend/StandardVigenereBackend.js';\r\n\r\nfunction SuperEncryption() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [transposeKeyText, setTransposeKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(superEncode(sourceText, keyText, transposeKeyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(superDecode(sourceText, keyText, transposeKeyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Super Encryption Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"TransposeKey\" type=\"number\" onChange={e => setTransposeKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperEncryption;\r\n","/**\r\n * Affine encryption\r\n * Cj = (Ai * Pj + Ki) mod 26\r\n * \r\n * @param {String} plainText \r\n * @param {Number} affineKey \r\n * @param {Number} key \r\n */\r\nexport function encode(plainText, affineKey, key) {\r\n    let cipherText = \"\";\r\n    let keyNum = parseInt(key);\r\n    let affineKeyNum = parseInt(affineKey);\r\n    plainText = cleanText(plainText);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 65;\r\n        charNum = (((charNum * affineKeyNum + keyNum) % 26) + 26) % 26;\r\n        charNum = charNum + 65;\r\n        cipherText += String.fromCharCode(charNum);\r\n    }\r\n    return cipherText;\r\n}\r\n\r\n/**\r\n * Affine decryption\r\n * Syarat Affine Key merupakan coprime dari 26\r\n * Pj = (ModInverse(Ai) * Cj - Ki)\r\n * \r\n * @param {String} cipherText \r\n * @param {Number} affineKey \r\n * @param {Number} key \r\n */\r\nexport function decode(cipherText, affineKey, key) {\r\n    let plainText = \"\";\r\n    let keyNum = parseInt(key);\r\n    let affineKeyNum = parseInt(affineKey);\r\n    cipherText = cleanText(cipherText);\r\n\r\n    let reverseAffineKeyNum = modInverse(affineKeyNum, 26);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        charNum = (((reverseAffineKeyNum * (charNum - keyNum)) % 26) + 26) % 26;\r\n        charNum = charNum + 65;\r\n        plainText += String.fromCharCode(charNum);\r\n    }\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    text = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n// Fungsi untuk modulus inverse\r\nfunction modInverse(affineKey, totalLetter) {\r\n    for (let i = 1; i < totalLetter; i++) {\r\n        if ((affineKey * i) % totalLetter === 1) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography, FormLabel, FormControlLabel, FormControl, RadioGroup, Radio } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/AffineBackend.js';\r\n\r\nfunction Affine() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [affineKeyText, setAffineKeyText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, affineKeyText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, affineKeyText, keyText));\r\n    }\r\n\r\n    const handleAffineKeyChange = (e) => {\r\n        setAffineKeyText(e.target.value);\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Affine Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.buttongroup} >\r\n                <FormLabel component=\"legend\"><b>Affine Key</b></FormLabel>\r\n                <RadioGroup row aria-label=\"Affine Key\" name=\"key\" onChange={handleAffineKeyChange} style={{justifyContent: 'center'}}>\r\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\r\n                    <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\r\n                    <FormControlLabel value=\"7\" control={<Radio />} label=\"7\" />\r\n                    <FormControlLabel value=\"9\" control={<Radio />} label=\"9\" />\r\n                    <FormControlLabel value=\"11\" control={<Radio />} label=\"11\" />\r\n                    <FormControlLabel value=\"15\" control={<Radio />} label=\"15\" />\r\n                    <FormControlLabel value=\"17\" control={<Radio />} label=\"17\" />\r\n                    <FormControlLabel value=\"19\" control={<Radio />} label=\"19\" />\r\n                    <FormControlLabel value=\"21\" control={<Radio />} label=\"21\" />\r\n                    <FormControlLabel value=\"23\" control={<Radio />} label=\"23\" />\r\n                    <FormControlLabel value=\"25\" control={<Radio />} label=\"25\" />\r\n                </RadioGroup>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" type=\"number\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affine;\r\n","import { matrix, multiply, inv, det, round, gcd } from 'mathjs';\r\n\r\n/*---------------- CIPHERING FUNCTION ------------------*/\r\n/**\r\n * Hill encoding\r\n * Change key into matrix (key length should be a sqaure number)\r\n * Multiply the matrix key with the plain text\r\n * \r\n * @param {String} plainText \r\n * @param {String} key \r\n */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    let size = Math.sqrt(keyCodes.length);\r\n    let N = plainText.length;\r\n\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    let keyMatrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n        let keyArray = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let keyElement = keyCodes.shift();\r\n            keyArray.push(keyElement);\r\n        }\r\n        \r\n        keyMatrix.push(keyArray);\r\n    }\r\n\r\n    const keyMathMatrix = matrix(keyMatrix);\r\n\r\n    for (let i = 0; i < Math.ceil(N / size); i++) {\r\n        let arrayPlainText = [];\r\n        \r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = plainText.charCodeAt(0) - 97;\r\n            plainText = plainText.substring(1);\r\n            arrayPlainText.push(charNum);\r\n        }\r\n        \r\n        let arrayCipherText = multiply(keyMathMatrix, arrayPlainText)._data;\r\n        \r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = arrayCipherText[j];\r\n            charNum = ((charNum % 26) + 26) % 26;\r\n            charNum = charNum + 65\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    cipherText = cleanText(cipherText);\r\n\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    let size = Math.sqrt(keyCodes.length);\r\n    let N = cipherText.length;\r\n\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    let keyMatrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n        let keyArray = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let keyElement = keyCodes.shift();\r\n            keyArray.push(keyElement);\r\n        }\r\n\r\n        keyMatrix.push(keyArray);\r\n    }\r\n\r\n    let determinant = det(matrix(keyMatrix));\r\n    let tempDeterminant = round(determinant);\r\n\r\n    if (tempDeterminant === 0 || gcd(tempDeterminant, 26) !== 1) {\r\n        console.error(\"Key Error! Determinant not a coprime of 26!\")\r\n        return \"-1\";\r\n    }\r\n\r\n    let keyMathMatrix = inv(matrix(keyMatrix));\r\n\r\n    keyMathMatrix = round(multiply(determinant, keyMathMatrix));\r\n\r\n    determinant = round(determinant);\r\n\r\n    determinant = ((determinant % 26) + 26) % 26;\r\n    \r\n    determinant = modInverse(determinant, 26);\r\n\r\n    console.log(determinant);\r\n\r\n    keyMathMatrix = multiply(determinant, keyMathMatrix);\r\n\r\n    for (let i = 0; i < Math.ceil(N / size); i++) {\r\n        let arrayCipherText = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = cipherText.charCodeAt(0) - 65;\r\n            cipherText = cipherText.substring(1);\r\n            arrayCipherText.push(charNum);\r\n        }\r\n\r\n        let arrayPlainText = multiply(keyMathMatrix, arrayCipherText)._data;\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = arrayPlainText[j];\r\n            charNum = ((charNum % 26) + 26) % 26;\r\n            charNum = charNum + 65\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    \r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction modInverse(hillKey, totalLetter) {\r\n    for (let i = 1; i < totalLetter; i++) {\r\n        if ((hillKey * i) % totalLetter === 1) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n/**\r\n * Validasi determinan\r\n * Memastikan bahwa determinan tidak 0 dan merupakan coprime dari 26\r\n * \r\n * @param {Number} key \r\n */\r\nexport function validateDeterminant(key) {\r\n    let keyCodes = getKeys(key);\r\n    let size = Math.sqrt(keyCodes.length);\r\n    let keyMatrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n        let keyArray = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let keyElement = keyCodes.shift();\r\n            keyArray.push(keyElement);\r\n        }\r\n\r\n        keyMatrix.push(keyArray);\r\n    }\r\n\r\n    let determinant = det(matrix(keyMatrix));\r\n    let tempDeterminant = round(determinant);\r\n\r\n    if (tempDeterminant === 0 || gcd(tempDeterminant, 26) !== 1) {\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography} from '@material-ui/core';\r\nimport { encode, decode, splitByFive, validateDeterminant } from '../../Backend/HillBackend.js';\r\n\r\nfunction Hill() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    const [errorText, setErrorText] = useState(\"\");\r\n    const [resultErrorText, setResultErrorText] = useState(\"\")\r\n\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    function validateKeyInput() {\r\n        let i = 1;\r\n        // Maks 100 x 100\r\n        while (i < 100000) {\r\n            console.log(i * i);\r\n            if ((i * i) > keyText.length) {\r\n                setErrorText(\"KeyInput should have the length of a SQUARE NUMBER\");\r\n                return false;\r\n            } else if ((i * i) < keyText.length) {\r\n                i += 1;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        if (validateKeyInput()) {\r\n            setErrorText(\"\");\r\n            setResultText(encode(sourceText, keyText.toUpperCase()));\r\n            if (validateDeterminant(keyText)) {\r\n                setResultErrorText(\"\")\r\n            }\r\n            else {\r\n                setResultErrorText(\"Warning! Determinant not a coprime of 26! Ciphertext cannot be decrypted!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText.toUpperCase()));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Hill Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" \r\n                    label=\"Key\" \r\n                    onChange={e => setKeyText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <label style={{ color: \"red\" }}>{errorText}</label>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label style={{ color: \"#ff9900\" }}>{resultErrorText}</label>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hill;\r\n","/**\r\n * Class Enigma Machine\r\n * Mencakup 1 Reflector, 1 Plugboard, dan beberapa rotors\r\n * Proses:\r\n * Plugboard -> Rotor -> Reflector -> Rotor -> Plugboard\r\n */\r\nexport class EnigmaMachine {\r\n    constructor() {\r\n        this.rotors = [];\r\n        this.reflector = new EnigmaReflector(0);\r\n        this.plugboard = new EnigmaPlugboard(\"\");\r\n    }\r\n\r\n    /*** ROTOR, REFLECTOR, PLUGBOARD ***/\r\n    resetRotors() {\r\n        this.rotors = []\r\n    }\r\n    addRotor(seed, spinCount, shiftLetter) {\r\n        let newRotor = new EnigmaRotor(seed, spinCount, shiftLetter);\r\n        this.rotors.push(newRotor)\r\n    }\r\n\r\n    setReflector(reflectorNum) {\r\n        reflectorNum = parseInt(reflectorNum);\r\n        this.reflector = new EnigmaReflector(reflectorNum);\r\n    }\r\n\r\n    setPlugboard(swappers) {\r\n        this.plugboard = new EnigmaPlugboard(swappers);\r\n    }\r\n\r\n    /*** ENCODE AND DECODE ***/\r\n    executeEnigma(charNum) {\r\n        console.log(this.rotors);\r\n        console.log(this.reflector);\r\n        console.log(this.plugboard);\r\n        // Forward\r\n        let result = this.plugboard.plugboardExecute(charNum);\r\n        console.log(\"1 = \" + result);\r\n        for (let i = 0; i < this.rotors.length; i++) {\r\n            result = this.rotors[i].searchCipher(result);\r\n        }\r\n        console.log(this.rotors.length);\r\n        console.log(\"2 = \" + result);\r\n\r\n        // Reflector\r\n        result = this.reflector.reflect(result);\r\n        console.log(\"3 = \" + result);\r\n\r\n        // Backward\r\n        for (let i = (this.rotors.length - 1); i >= 0; i--) {\r\n            result = this.rotors[i].searchPlain(result);\r\n        }\r\n        console.log(\"4 = \" + result);\r\n\r\n        result = this.plugboard.plugboardExecute(result);\r\n        console.log(\"5 = \" + result);\r\n\r\n        this.rotateRotors();\r\n\r\n        return result;\r\n    }\r\n\r\n    rotateRotors() {\r\n        let i = 0;\r\n        while (i < this.rotors.length) {\r\n            this.rotors[i].spinRotor();\r\n            this.rotors[i].spinCount++;\r\n            if (this.rotors[i].spinCount >= 26) {\r\n                this.rotors[i].spinCount = 0;\r\n            }\r\n            if (this.rotors[i].spinCount === this.rotors[i].rotorShiftNum) {\r\n                i++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Rotor enigma\r\n * Dapat melakukan shift, getCipher, dan getPlain\r\n * Rotor paling cepat merupakan rotor yang paling dekat dengan plugboard\r\n */\r\nclass EnigmaRotor {\r\n    constructor(seed, spinCount, rotorShiftNum) {\r\n        this.leftRotor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n\r\n        let shuffleSeed = require('shuffle-seed');\r\n        let rightRotor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n        rightRotor = shuffleSeed.shuffle(rightRotor, seed);\r\n        this.rightRotor = rightRotor;\r\n\r\n        spinCount = parseInt(spinCount);\r\n        for (let i = 0; i < spinCount; i++) {\r\n            this.spinRotor();\r\n        }\r\n        this.spinCount = spinCount;\r\n        this.rotorShiftNum = parseInt(rotorShiftNum);\r\n    }\r\n\r\n    spinRotor() {\r\n        this.leftRotor.push(this.leftRotor.shift());\r\n        this.rightRotor.unshift(this.rightRotor.pop());\r\n    }\r\n\r\n    searchCipher(charNum) {\r\n        console.log(charNum);\r\n        let rotorKey = this.leftRotor[charNum];\r\n        console.log(\"Rotor key = \" + rotorKey);\r\n        let rotorIdx = -1;\r\n        for (let i = 0; i < this.rightRotor.length; i++) {\r\n            if (this.rightRotor[i] === rotorKey) {\r\n                rotorIdx = i;\r\n                break;\r\n            }\r\n        }\r\n        console.log(rotorIdx);\r\n        return rotorIdx;\r\n    }\r\n\r\n    searchPlain(charNum) {\r\n        console.log(charNum);\r\n        let rotorKey = this.rightRotor[charNum];\r\n        console.log(\"Rotor key = \" + rotorKey);\r\n        let rotorIdx = -1;\r\n        for (let i = 0; i < this.leftRotor.length; i++) {\r\n            if (this.leftRotor[i] === rotorKey) {\r\n                rotorIdx = i;\r\n                break;\r\n            }\r\n        }\r\n        console.log(rotorIdx);\r\n        return rotorIdx;\r\n    }\r\n}\r\n\r\n/**\r\n * Plugboard\r\n * Berfungsi untuk menukar huruf-huruf\r\n */\r\nclass EnigmaPlugboard {\r\n    constructor(swappers) {\r\n        this.plugboard = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n        this.setPlugboard(swappers);\r\n        this.swappers = swappers;\r\n    }\r\n\r\n    resetPlugboard() {\r\n        this.plugboard = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n    }\r\n\r\n    setPlugboard(swappers) {\r\n        this.resetPlugboard();\r\n        swappers = swappers.toUpperCase();\r\n        let swapperList = swappers.split(\" \");\r\n        this.swappers = swappers;\r\n\r\n        for (let i = 0; i < swapperList.length; i++) {\r\n            let firstCharNum = swapperList[i].charCodeAt(0) - 65;\r\n            let secondCharNum = swapperList[i].charCodeAt(1) - 65;\r\n\r\n            if (this.plugboard[firstCharNum] === firstCharNum && this.plugboard[secondCharNum] === secondCharNum) {\r\n                this.plugboard[firstCharNum] = secondCharNum;\r\n                this.plugboard[secondCharNum] = firstCharNum;\r\n            }\r\n        }\r\n    }\r\n\r\n    plugboardExecute(charNum) {\r\n        return this.plugboard[charNum];\r\n    }\r\n}\r\n\r\n/**\r\n * Enigma reflector\r\n * Reflector berfungsi untuk membalikkan huruf\r\n */\r\nclass EnigmaReflector {\r\n    constructor(reflectorNum) {\r\n        let reflectorNumber = parseInt(reflectorNum);\r\n        this.reflector = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n        this.setReflector(reflectorNumber);\r\n    }\r\n\r\n    resetReflector() {\r\n        this.reflector = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n    }\r\n\r\n    setReflector(reflectorNumber) {\r\n        this.reflectorNum = parseInt(reflectorNumber);\r\n        switch(reflectorNumber) {\r\n            case 1:\r\n                this.setReflectorInner(\"KGWNTRBLQPAHYDVJIFXEZOCSMU\");\r\n                break;\r\n            case 2:\r\n                this.setReflectorInner(\"UORYTQSLWXZHNMBVFCGEAPIJDK\");\r\n                break;\r\n            case 3:\r\n                this.setReflectorInner(\"HLNRSKJAMGFBICUQPDEYOZXWTV\");\r\n                break;\r\n            case 4:\r\n                this.setReflectorInner(\"KPTXIGFMESAUHYQBOVJCLRZDNW\");\r\n                break;\r\n            case 5:\r\n                this.setReflectorInner(\"XDYBPWOSMUZRIQGENLHVJTFACK\");\r\n                break;\r\n            default:\r\n                this.swapArrayElement(this.reflector, 0, 25);\r\n        }\r\n    }\r\n\r\n    setReflectorInner(reflectorKey) {\r\n        reflectorKey = reflectorKey.toUpperCase();\r\n        this.resetReflector();\r\n        for (let i = 0; i < reflectorKey.length; i++) {\r\n            if (this.reflector[i] === i) {\r\n                let charNum = reflectorKey.charCodeAt(i) - 65\r\n                this.reflector[i] = charNum;\r\n            }\r\n        } \r\n    }\r\n\r\n    reflect(charNum) {\r\n        return this.reflector[charNum];\r\n    }\r\n\r\n    /* Swap array element use for swapping element */\r\n    swapArrayElement(idxOne, idxTwo) {\r\n        let arraySource = this.reflector;\r\n        let valOne = arraySource[idxOne];\r\n        arraySource[idxOne] = arraySource[idxTwo];\r\n        arraySource[idxTwo] = valOne;\r\n    }\r\n}\r\n","import { EnigmaMachine } from \"../Backend/EnigmaMachine.js\";\r\n\r\n/**\r\n * Enigma backend\r\n * Encode and decode enigma\r\n * \r\n * @param {String} plainText - will be encoded\r\n * @param {String} enigmaReflectorText - Which number will the reflector be (1 - 5) \r\n * @param {String} enigmaPlugboardText - Plugboard swaps (pairs of letters)\r\n * @param {String} enigmaRotorText - List of rotors that will be created\r\n * @returns result hasil dari enkripsi atau dekripsi mesin enigma\r\n */\r\nexport function execute(plainText, enigmaReflectorText, enigmaPlugboardText, enigmaRotorText) {\r\n    let cipherText = \"\";\r\n    plainText = cleanText(plainText);\r\n\r\n    let machine = getMachine(enigmaReflectorText, enigmaPlugboardText, enigmaRotorText);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 65;\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            console.log(\"Pre: \" + charNum)\r\n            charNum = machine.executeEnigma(charNum);\r\n            console.log(\"Post: \" + charNum);\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return cipherText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Membuat sebuah machine enigma dengan spesifikasi yang sudah diberikan\r\n * \r\n * @param {String} enigmaReflectorText \r\n * @param {String} enigmaPlugboardText \r\n * @param {String} enigmaRotorText \r\n * @returns {Object} mesin Enigma\r\n */\r\nfunction getMachine(enigmaReflectorText, enigmaPlugboardText, enigmaRotorText) {\r\n    let machine = new EnigmaMachine();\r\n    machine.setReflector(parseInt(enigmaReflectorText));\r\n    machine.setPlugboard(enigmaPlugboardText);\r\n\r\n    let newRotors = enigmaRotorText.split(\" \");\r\n    for (let i = 0; i < newRotors.length; i++) {\r\n        let seed = newRotors[i].charAt(0);\r\n        let spinCount = parseInt(newRotors[i].charAt(1));\r\n        let shiftLetter = newRotors[i].charCodeAt(2) - 65;\r\n        if (shiftLetter < 0 || shiftLetter > 25) {\r\n            shiftLetter = 0;\r\n        }\r\n        machine.addRotor(seed, spinCount, shiftLetter);\r\n    }\r\n\r\n    return machine;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    text = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { execute, splitByFive } from '../../Backend/EnigmaBackend.js';\r\nimport { EnigmaMachine } from '../../Backend/EnigmaMachine.js';\r\n\r\nfunction Enigma() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n\r\n    const [enigmaReflectorText, setEnigmaReflectorText] = useState(\"\");\r\n    const [enigmaPlugboardText, setEnigmaPlugboardText] = useState(\"\");\r\n    const [enigmaRotorText, setEnigmaRotorText] = useState(0);\r\n\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(execute(sourceText, enigmaReflectorText, enigmaPlugboardText, enigmaRotorText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(execute(sourceText, enigmaReflectorText, enigmaPlugboardText, enigmaRotorText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Enigma Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField \r\n                    id=\"standard-basic-1\" \r\n                    label=\"Plugboard\" \r\n                    placeholder=\"AB ZE   -> Format: (swapLetter)(swapLetter) ...\" \r\n                    onChange={e => setEnigmaPlugboardText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField \r\n                    id=\"standard-basic-2\" \r\n                    label=\"Reflector\" \r\n                    placeholder=\"3\"\r\n                    type=\"number\"\r\n                    onChange={e => setEnigmaReflectorText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField \r\n                    id=\"standard-basic-3\" \r\n                    label=\"Rotors\" \r\n                    placeholder=\"32B 34T  -> Format: (seed)(spinCount)(shiftLetter) ...\" \r\n                    onChange={e => setEnigmaRotorText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.divider} />\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Enigma;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FullVigenere from './Components/FullVigenere/FullVigenere.js';\r\nimport StandardVigenere from './Components/StandardVigenere/StandardVigenere.js';\r\nimport AutoKeyVigenere from './Components/AutoKeyVigenere/AutoKeyVigenere.js';\r\nimport ExtendedVigenere from './Components/ExtendedVigenere/ExtendedVigenere.js';\r\nimport Playfair from \"./Components/Playfair/Playfair.js\";\r\nimport SuperEncryption from './Components/SuperEncryption/SuperEncryption.js';\r\nimport Affine from './Components/Affine/Affine.js';\r\nimport Hill from './Components/Hill/Hill.js';\r\nimport Enigma from './Components/Enigma/Enigma.js';\r\n\r\nfunction Home() {\r\n    const [cipherId, setCipherId] = useState(0)\r\n\r\n    const drawerWidth = 240;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerContainer: {\r\n            overflow: 'auto',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n          marginLeft: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const cipherList = [\r\n        \"Standard Vigenere Cipher\",\r\n        \"Full Vigenere Cipher\",\r\n        \"Auto-Key Vigenere Cipher\",\r\n        \"Extended Vigenere Cipher\",\r\n        \"Playfair Cipher\",\r\n        \"Super Encryption\",\r\n        \"Affine Cipher\",\r\n        \"Hill Cipher\",\r\n        \"Enigma Cipher\"\r\n    ];\r\n\r\n    function handleChange(index) {\r\n        if (index === 0) {\r\n            setCipherId(0);\r\n        }\r\n        else if (index === 1) {\r\n            setCipherId(1);\r\n        }\r\n        else if (index === 2) {\r\n            setCipherId(2);\r\n        }\r\n        else if (index === 3) {\r\n            setCipherId(3);\r\n        }\r\n        else if (index === 4) {\r\n            setCipherId(4);\r\n        }\r\n        else if (index === 5) {\r\n            setCipherId(5);\r\n        }\r\n        else if (index === 6) {\r\n            setCipherId(6);\r\n        }\r\n        else if (index === 7) {\r\n            setCipherId(7);\r\n        }\r\n        else if (index === 8) {\r\n            setCipherId(8);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              CrypTK\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" noWrap className={classes.title}>\r\n              By Ferdy and Meyer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              {cipherList.map((text, index) => (\r\n                <ListItem button key={text} onClick={() => handleChange(index)} selected={cipherId === index}>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <Toolbar />\r\n          <div>\r\n            {\r\n                cipherId === 0 ? <StandardVigenere />\r\n                :cipherId === 1 ? <FullVigenere />\r\n                :cipherId === 2 ? <AutoKeyVigenere />\r\n                :cipherId === 3 ? <ExtendedVigenere />\r\n                :cipherId === 4 ? <Playfair />\r\n                :cipherId === 5 ? <SuperEncryption />\r\n                :cipherId === 6 ? <Affine />\r\n                :cipherId === 7 ? <Hill />\r\n                :cipherId === 8 ? <Enigma />\r\n                :null\r\n            }\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Home.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}