{"version":3,"sources":["Backend/FullVigenereBackend.js","Components/FullVigenere/FullVigenere.js","Backend/StandardVigenereBackend.js","Components/StandardVigenere/StandardVigenere.js","Backend/AutoKeyVigenereBackend.js","Components/AutoKeyVigenere/AutoKeyVigenere.js","Backend/ExtendedVigenereBackend.js","Components/ExtendedVigenere/ExtendedVigenere.js","Backend/PlayfairBackend.js","Components/Playfair/Playfair.js","Backend/SuperEncryptionBackend.js","Components/SuperEncryption/SuperEncryption.js","Backend/AffineBackend.js","Components/Affine/Affine.js","Backend/HillBackend.js","Components/Hill/Hill.js","Backend/EnigmaMachine.js","Backend/EnigmaBackend.js","Components/Enigma/Enigma.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["cleanText","text","result","i","length","charCodeAt","charAt","getKeys","charNum","push","splitByFive","FullVigenere","fileReader","useState","value","setValue","table","setTable","useEffect","array","rng","seedrandom","sort","quick","arrayTemp","slice","console","log","generateTable","sourceText","setSourceText","keyText","setKeyText","resultText","setResultText","handleFileRead","e","preventDefault","content","classes","makeStyles","theme","buttongroup","margin","spacing","textfield","width","textarea","divider","marginTop","marginBottom","input","display","outputtype","useStyles","Typography","variant","TextareaAutosize","aria-label","placeholder","rowsMin","rowsMax","className","onChange","target","accept","id","multiple","type","file","files","FileReader","onloadend","readAsText","htmlFor","Button","color","component","TextField","label","onClick","plainText","key","cipherText","keyCodes","toLowerCase","currentKey","String","fromCharCode","encode","toUpperCase","j","found","decode","Divider","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","data","filename","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","StandardVigenere","AutoKeyVigenere","end","ExtendedVigenere","outputType","setOutputType","sourceBytes","setSourceBytes","resultBytes","setResultBytes","inputFile","setInputFile","buffer","newFilename","split","inputtype","readAsArrayBuffer","Int8Array","int8cipherText","encodeFile","decodeFile","cleanUpKey","resultArray","currentChar","includes","createKeyMatrix","keyArray","charValue","resultMatrix","matrixRow","tempResult","tempPair","getEncodePairs","keyMatrix","sourcePair","resultPair","firstLocation","getLocation","secondLocation","getDecodePairs","letter","resultLocation","Playfair","textPairs","encodedPair","decodePair","transform","transposeKey","SuperEncryption","transposeKeyText","setTransposeKeyText","vigenereKey","parseInt","padNum","paddings","vigenereText","superEncode","Math","round","transposedText","superDecode","Affine","affineKeyText","setAffineKeyText","row","style","justifyContent","affineKey","keyNum","affineKeyNum","reverseAffineKeyNum","totalLetter","modInverse","Hill","errorText","setErrorText","resultErrorText","setResultErrorText","validateKeyInput","size","sqrt","N","keyElement","shift","keyMathMatrix","matrix","ceil","arrayPlainText","substring","arrayCipherText","multiply","_data","determinant","det","tempDeterminant","gcd","validateDeterminant","error","inv","hillKey","EnigmaMachine","seed","firstSeed","secondSeed","thirdSeed","fourthSeed","this","firstRotor","EnigmaRotor","secondRotor","thirdRotor","fourthRotor","firstRotorSpinCount","secondRotorSpinCount","thirdRotorSpinCount","fourthRotorSpinCount","processedCharNum","searchCipher","rotateRotors","searchPlain","spinRotor","leftRotor","rightRotor","require","shuffle","unshift","pop","rotorKey","rotorIdx","Enigma","seedText","setSeedText","machineSeed","machine","encodeLetter","decodeLetter","Home","cipherId","setCipherId","root","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","flexGrow","padding","title","marginLeft","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","paper","List","map","index","ListItem","button","handleChange","selected","ListItemText","primary","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.538ba2f3.chunk.js","sourcesContent":["import seedrandom from 'seedrandom';\r\n\r\nexport function generateTable() {\r\n    let array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n        10, 11, 12, 13, 14, 15, 16, 17,\r\n        18, 19, 20, 21, 22, 23, 24, 25\r\n    ];\r\n\r\n    let table = [];\r\n\r\n    var rng = seedrandom();\r\n\r\n    for (let i = 0; i < 26; i++) {\r\n        array.sort(() => rng.quick() - 0.5);\r\n        let arrayTemp = array.slice();\r\n        table.push(arrayTemp);\r\n    }\r\n\r\n    console.log(table)\r\n    return table;\r\n}\r\n\r\n/* Encoding */\r\nexport function encode(plainText, key, table) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    console.log(keyCodes);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = table[currentKey][charNum];\r\n            //console.log(charNum)\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, key, table) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            let j = 0;\r\n            let found = false;\r\n            while (!found && j < 26) {\r\n                if (table[currentKey][j] === charNum) {\r\n                    found = true;\r\n                    charNum = j;\r\n                }\r\n                else {\r\n                    j++;\r\n                }\r\n            }\r\n            // console.log(charNum);\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n\r\n    return result;\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { generateTable, encode, decode, splitByFive } from '../../Backend/FullVigenereBackend.js';\r\n\r\nfunction FullVigenere() {\r\n\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [table,  setTable] = useState([]);\r\n\r\n    let fileReader;\r\n\r\n    useEffect(() => {\r\n        setTable(generateTable())\r\n    }, [])\r\n\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText, table));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText, table));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Full Vigenere Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FullVigenere;\r\n","/*---------------- CIPHERING FUNCTION ------------------*/\r\n/* Encoding */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum + currentKey) % 26) + 26) % 26;\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum - currentKey) % 26) + 26) % 26;\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/StandardVigenereBackend.js';\r\n\r\nfunction StandardVigenere() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Standard Vigenere Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StandardVigenere;\r\n","/* Encoding */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    let end = plainText.length - keyCodes.length;\r\n    for (let i = 0; i < end; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            keyCodes.push(charNum);\r\n        }\r\n    }\r\n\r\n    console.log(keyCodes);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 97;\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum + currentKey) % 26) + 26) % 26;\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        let currentKey = keyCodes[i];\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = (((charNum - currentKey) % 26) + 26) % 26;\r\n            // console.log(charNum);\r\n            if (keyCodes.length < cipherText.length) {\r\n                keyCodes.push(charNum);\r\n            }\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/AutoKeyVigenereBackend.js';\r\n\r\nfunction AutoKeyVigenere() {\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Auto-Key Vigenere Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText} />\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)} />\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AutoKeyVigenere;\r\n","/* Encoding */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n\r\n    console.log(keyCodes);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i);\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum + currentKey) % 256) + 256) % 256;\r\n        cipherText += String.fromCharCode(charNum);\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i);\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum - currentKey) % 256) + 256) % 256;\r\n        plainText += String.fromCharCode(charNum);\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nexport function encodeFile(plainText, key) {\r\n    let cipherText = []\r\n    plainText = new Int8Array(plainText);\r\n    \r\n    let keyCodes = getKeys(key);\r\n    console.log(plainText);\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText[i];\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum + currentKey) % 256) + 256) % 256;\r\n        cipherText.push(charNum);\r\n    }\r\n    \r\n    let int8cipherText = new Int8Array(cipherText);\r\n\r\n    console.log(int8cipherText)\r\n\r\n    return int8cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decodeFile(cipherText, key) {\r\n    let plainText = [];\r\n    cipherText = new Int8Array(cipherText);\r\n    \r\n    let keyCodes = getKeys(key);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText[i];\r\n        let currentKey = keyCodes[i % keyCodes.length];\r\n\r\n        charNum = (((charNum - currentKey) % 256) + 256) % 256;\r\n        plainText.push(charNum);\r\n    }\r\n\r\n    let int8plainText = new Int8Array(plainText);\r\n\r\n    return int8plainText;\r\n}\r\n\r\n/*\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n*/\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i);\r\n        result.push(charNum);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, encodeFile, decodeFile, splitByFive } from '../../Backend/ExtendedVigenereBackend.js';\r\n\r\nfunction ExtendedVigenere() {\r\n    const [outputType, setOutputType] = useState(\"nospaces\");\r\n    const [value, setValue] = useState(\"text\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [sourceBytes, setSourceBytes] = useState(null);\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    const [resultBytes, setResultBytes] = useState(null);\r\n    const [inputFile, setInputFile] = useState(null);\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        data = data.buffer;\r\n        console.log(data);\r\n        let newFilename = filename.split('.')[0];\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, newFilename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = newFilename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n        \r\n        console.log(fileReader)\r\n        const content = fileReader.result;\r\n        setSourceBytes(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        setInputFile(file)\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsArrayBuffer(file);\r\n        //console.log(file);\r\n        \r\n    }\r\n    \r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Test encode\");\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n    \r\n    const handleDecode = (e) => {\r\n        console.log(\"Test decode\");\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n    \r\n    const handleEncodeFile = (e) => {\r\n        e.preventDefault();\r\n        setResultBytes(encodeFile(sourceBytes, keyText));\r\n    }\r\n\r\n    const handleDecodeFile = (e) => {\r\n        e.preventDefault();\r\n        setResultBytes(decodeFile(sourceBytes, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const handleOutputTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setOutputType(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        inputtype: {\r\n            marginTop: '20px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Extended Vigenere Cipher</Typography>\r\n            <div className={classes.inputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Input Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"text\" control={<Radio />} label=\"Text Input\" />\r\n                            <FormControlLabel value=\"file\" control={<Radio />} label=\"File Input\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"text\" ? \r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText} />\r\n                :\r\n                <div className={classes.buttongroup}>\r\n                    <input\r\n                        className={classes.input}\r\n                        id=\"contained-button-file\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={e => handleFileChosen(e.target.files[0])}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                    <div>\r\n                        {\r\n                            inputFile === null ? \"No File Selected\"\r\n                            : \"File uploaded: \" + inputFile.name\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)} />\r\n            </div>\r\n            {\r\n                value === \"text\" ?\r\n                <div className={classes.buttongroup}>\r\n                    <Button variant=\"contained\" onClick={handleEncode}>\r\n                        Encrypt\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleDecode}>\r\n                        Decrypt\r\n                    </Button>\r\n                </div>\r\n                :\r\n                <div className={classes.buttongroup}>\r\n                    <Button variant=\"contained\" onClick={handleEncodeFile}>\r\n                        Encrypt File\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleDecodeFile}>\r\n                        Decrypt File\r\n                    </Button>\r\n                </div>\r\n            }\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            {\r\n                value === \"text\" ?\r\n                <div>\r\n                    <div className={classes.outputtype}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                            <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={outputType} onChange={handleOutputTypeChange}>\r\n                                <div>\r\n                                    <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                                    <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                                </div>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                    {\r\n                        outputType === \"nospaces\" ?\r\n                            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                            :\r\n                            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)} />\r\n                    }\r\n                    <div className={classes.buttongroup}>\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"crypt\" + inputFile.name, \"application/octet-stream\")}>\r\n                            Save Text To File\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <div className={classes.buttongroup}>\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultBytes, \"crypt\" + inputFile.name, \"application/octet-stream\")}>\r\n                            Save To File\r\n                        </Button>\r\n                        <div>\r\n                            {\r\n                                resultBytes === null ? \"No File Result\"\r\n                                    : \"File ready: crypt\" + inputFile.name.split('.')[0]\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExtendedVigenere;\r\n","export function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = cleanUpKey(key);\r\n    let keyMatrix = createKeyMatrix(keyCodes);\r\n    let textPairs = cleanText(plainText);\r\n\r\n    console.log(\"Key Matrix\");\r\n    console.log(keyMatrix);\r\n    console.log(\"Text Pairs\");\r\n    console.log(textPairs);\r\n\r\n    for (let i = 0; i < textPairs.length; i++) {\r\n        let encodedPair = getEncodePairs(keyMatrix, textPairs[i]);\r\n        console.log(encodedPair);\r\n        cipherText += encodedPair[0];\r\n        cipherText += encodedPair[1];\r\n    }\r\n\r\n    return cipherText;\r\n}\r\n\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = cleanUpKey(key);\r\n    let keyMatrix = createKeyMatrix(keyCodes);\r\n    let textPairs = cleanText(cipherText);\r\n\r\n    for (let i = 0; i < textPairs.length; i++) {\r\n        let decodePair = getDecodePairs(keyMatrix, textPairs[i]);\r\n        plainText += decodePair[0];\r\n        plainText += decodePair[1];\r\n    }\r\n\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// Cleaning up key (switch J to I and removes letter redundancy)\r\nfunction cleanUpKey(key) {\r\n    let resultArray = [];\r\n    key = key.toUpperCase();\r\n\r\n    for (let i = 0; i < key.length; i++) {\r\n        if (key.charCodeAt(i) >= 65 && key.charCodeAt(i) <= 90) {\r\n            let currentChar = key.charAt(i);\r\n            if (key.charAt(i) === 'J') {\r\n                currentChar = 'I';\r\n            }\r\n            if (!resultArray.includes(currentChar)) {\r\n                resultArray.push(currentChar);\r\n            }\r\n        }\r\n    }\r\n\r\n    return resultArray;\r\n}\r\n\r\n// Making the key matrix from keyArray\r\nfunction createKeyMatrix(keyArray) {\r\n    // Fill the array\r\n    for (let i = 65; i <= 90; i++) {\r\n        let charValue = String.fromCharCode(i).charAt(0);\r\n        if (charValue !== 'J' && !keyArray.includes(charValue)) {\r\n            keyArray.push(charValue);\r\n        }\r\n    }\r\n\r\n    // Create matrix\r\n    let resultMatrix = [];\r\n    let matrixRow = [];\r\n    for (let i = 0; i < keyArray.length; i++) {\r\n        matrixRow.push(keyArray[i]);\r\n        if (i !== 0 && i % 5 === 4) {\r\n            resultMatrix.push(matrixRow);\r\n            matrixRow = [];\r\n        }\r\n    }\r\n\r\n    return resultMatrix;\r\n}\r\n\r\n// Cleaning up the text to be ready for playfair\r\nfunction cleanText(text) {\r\n    let tempResult = \"\";\r\n    let result = [];\r\n\r\n    // Filtering non-alphabets and change J to I\r\n    text = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90)) {\r\n            if (text.charAt(i) === 'J') {\r\n                tempResult += 'I';\r\n            } else {\r\n                tempResult += text.charAt(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(tempResult);\r\n\r\n    // Create pairs and preventing same pairs\r\n    let i = 0;\r\n    while (i < (tempResult.length - 1)) {\r\n        let tempPair = [];\r\n\r\n        tempPair.push(tempResult.charAt(i));\r\n        tempPair.push(tempResult.charAt(i + 1));\r\n\r\n        if (tempPair[0] === tempPair[1]) {\r\n            tempPair[1] = 'X';\r\n            i += 1;\r\n        } else {\r\n            i += 2;\r\n        }\r\n        result.push(tempPair);\r\n    }\r\n    if (i < tempResult.length) {\r\n        let tempPair = [];\r\n        tempPair.push(tempResult.charAt(tempResult.length - 1));\r\n        tempPair.push('X');\r\n\r\n        result.push(tempPair);\r\n    }\r\n    return result;\r\n}\r\n\r\n// Get encoded pairs\r\nfunction getEncodePairs(keyMatrix, sourcePair) {\r\n    let resultPair = [];\r\n\r\n    let firstLocation = getLocation(keyMatrix, sourcePair[0]);\r\n    let secondLocation = getLocation(keyMatrix, sourcePair[1]);\r\n\r\n    // Kasus dalam baris yang sama\r\n    if (firstLocation[0] === secondLocation[0]) {\r\n        resultPair.push(keyMatrix[firstLocation[0]][(firstLocation[1] + 1) % 5]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][(secondLocation[1] + 1) % 5]);\r\n    }\r\n    // Kasus dalam kolom yang sama\r\n    else if (firstLocation[1] === secondLocation[1]) {\r\n        resultPair.push(keyMatrix[(firstLocation[0] + 1) % 5][firstLocation[1]]);\r\n        resultPair.push(keyMatrix[(secondLocation[0] + 1) % 5][secondLocation[1]]);\r\n    }\r\n    // Kasus sisanya\r\n    else {\r\n        resultPair.push(keyMatrix[firstLocation[0]][secondLocation[1]]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][firstLocation[1]]);\r\n    }\r\n\r\n    return resultPair;\r\n}\r\n\r\n// Get encoded pairs\r\nfunction getDecodePairs(keyMatrix, sourcePair) {\r\n    let resultPair = [];\r\n\r\n    let firstLocation = getLocation(keyMatrix, sourcePair[0]);\r\n    let secondLocation = getLocation(keyMatrix, sourcePair[1]);\r\n\r\n    // Kasus dalam baris yang sama\r\n    if (firstLocation[0] === secondLocation[0]) {\r\n        resultPair.push(keyMatrix[firstLocation[0]][(firstLocation[1] + 4) % 5]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][(secondLocation[1] + 4) % 5]);\r\n    }\r\n    // Kasus dalam kolom yang sama\r\n    else if (firstLocation[1] === secondLocation[1]) {\r\n        resultPair.push(keyMatrix[(firstLocation[0] + 4) % 5][firstLocation[1]]);\r\n        resultPair.push(keyMatrix[(secondLocation[0] + 4) % 5][secondLocation[1]]);\r\n    }\r\n    // Kasus sisanya\r\n    else {\r\n        resultPair.push(keyMatrix[firstLocation[0]][secondLocation[1]]);\r\n        resultPair.push(keyMatrix[secondLocation[0]][firstLocation[1]]);\r\n    }\r\n\r\n    return resultPair;\r\n}\r\n\r\nfunction getLocation(keyMatrix, letter) {\r\n    let resultLocation = []\r\n    for (let i = 0; i < keyMatrix.length; i++) {\r\n        for (let j = 0; j < keyMatrix[i].length; j++) {\r\n            if (keyMatrix[i][j] === letter) {\r\n                resultLocation.push(i);\r\n                resultLocation.push(j);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return resultLocation;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport {encode, decode, splitByFive} from '../../Backend/PlayfairBackend.js';\r\n\r\nfunction Playfair() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Playfair Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playfair;\r\n","import { encode, decode } from '../Backend/StandardVigenereBackend.js';\r\n\r\nexport function superEncode(plainText, vigenereKey, transposeKey) {\r\n    transposeKey = parseInt(transposeKey);\r\n    plainText = cleanText(plainText);\r\n    plainText = paddings(plainText, transposeKey);\r\n    console.log(plainText);\r\n    let vigenereText = encode(plainText, vigenereKey);\r\n    console.log(vigenereText);\r\n    return transform(vigenereText, transposeKey);\r\n}\r\n\r\nexport function superDecode(cipherText, vigenereKey, transposeKey) {\r\n    cipherText = cleanText(cipherText);\r\n    transposeKey = Math.round(cipherText.length / parseInt(transposeKey));\r\n    console.log(cipherText);\r\n    let transposedText = transform(cipherText, transposeKey);\r\n    console.log(transposedText);\r\n    return decode(transposedText, vigenereKey);\r\n}\r\n\r\n// Encode key length\r\nfunction paddings(text, transposeKey) {\r\n    let padNum = (transposeKey - (((text.length % transposeKey) + transposeKey) % transposeKey)) % transposeKey;\r\n    for (let i = 0; i < padNum; i++) {\r\n        text += 'X';\r\n    }\r\n    \r\n    return text;\r\n}\r\n\r\n// Transpose dengan panjang setiap baris 5\r\nfunction transform(text, transposeKey) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < transposeKey; i++) {\r\n        let j = 0;\r\n        while ((i + j * transposeKey) < text.length) {\r\n            result += text.charAt(i + j * transposeKey);\r\n            j += 1;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    text = text.toUpperCase();\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { superEncode, superDecode } from '../../Backend/SuperEncryptionBackend.js';\r\nimport { splitByFive } from '../../Backend/StandardVigenereBackend.js';\r\n\r\nfunction SuperEncryption() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [transposeKeyText, setTransposeKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(superEncode(sourceText, keyText, transposeKeyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(superDecode(sourceText, keyText, transposeKeyText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Super Encryption Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"TransposeKey\" type=\"number\" onChange={e => setTransposeKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperEncryption;\r\n","/*---------------- CIPHERING FUNCTION ------------------*/\r\n/* Encoding */\r\nexport function encode(plainText, affineKey, key) {\r\n    let cipherText = \"\";\r\n    let keyNum = parseInt(key);\r\n    let affineKeyNum = parseInt(affineKey);\r\n    plainText = cleanText(plainText);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 65;\r\n        charNum = (((charNum * affineKeyNum + keyNum) % 26) + 26) % 26;\r\n        charNum = charNum + 65;\r\n        cipherText += String.fromCharCode(charNum);\r\n    }\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, affineKey, key) {\r\n    let plainText = \"\";\r\n    let keyNum = parseInt(key);\r\n    let affineKeyNum = parseInt(affineKey);\r\n    cipherText = cleanText(cipherText);\r\n\r\n    let reverseAffineKeyNum = modInverse(affineKeyNum, 26);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n        charNum = (((reverseAffineKeyNum * (charNum - keyNum)) % 26) + 26) % 26;\r\n        charNum = charNum + 65;\r\n        plainText += String.fromCharCode(charNum);\r\n    }\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    text = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction modInverse(affineKey, totalLetter) {\r\n    for (let i = 1; i < totalLetter; i++) {\r\n        if ((affineKey * i) % totalLetter === 1) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography, FormLabel, FormControlLabel, FormControl, RadioGroup, Radio } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/AffineBackend.js';\r\n\r\nfunction Affine() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [affineKeyText, setAffineKeyText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, affineKeyText, keyText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, affineKeyText, keyText));\r\n    }\r\n\r\n    const handleAffineKeyChange = (e) => {\r\n        setAffineKeyText(e.target.value);\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Affine Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.buttongroup} >\r\n                <FormLabel component=\"legend\"><b>Affine Key</b></FormLabel>\r\n                <RadioGroup row aria-label=\"Affine Key\" name=\"key\" onChange={handleAffineKeyChange} style={{justifyContent: 'center'}}>\r\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\r\n                    <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\r\n                    <FormControlLabel value=\"7\" control={<Radio />} label=\"7\" />\r\n                    <FormControlLabel value=\"9\" control={<Radio />} label=\"9\" />\r\n                    <FormControlLabel value=\"11\" control={<Radio />} label=\"11\" />\r\n                    <FormControlLabel value=\"15\" control={<Radio />} label=\"15\" />\r\n                    <FormControlLabel value=\"17\" control={<Radio />} label=\"17\" />\r\n                    <FormControlLabel value=\"19\" control={<Radio />} label=\"19\" />\r\n                    <FormControlLabel value=\"21\" control={<Radio />} label=\"21\" />\r\n                    <FormControlLabel value=\"23\" control={<Radio />} label=\"23\" />\r\n                    <FormControlLabel value=\"25\" control={<Radio />} label=\"25\" />\r\n                </RadioGroup>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"Key\" type=\"number\" onChange={e => setKeyText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affine;\r\n","import { matrix, multiply, inv, det, round, gcd } from 'mathjs';\r\n\r\n/*---------------- CIPHERING FUNCTION ------------------*/\r\n/* Encoding */\r\nexport function encode(plainText, key) {\r\n    let cipherText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    let size = Math.sqrt(keyCodes.length);\r\n    let N = plainText.length;\r\n\r\n    plainText = cleanText(plainText).toLowerCase();\r\n\r\n    let keyMatrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n        let keyArray = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let keyElement = keyCodes.shift();\r\n            keyArray.push(keyElement);\r\n        }\r\n        \r\n        keyMatrix.push(keyArray);\r\n    }\r\n\r\n    const keyMathMatrix = matrix(keyMatrix);\r\n\r\n    for (let i = 0; i < Math.ceil(N / size); i++) {\r\n        let arrayPlainText = [];\r\n        \r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = plainText.charCodeAt(0) - 97;\r\n            plainText = plainText.substring(1);\r\n            arrayPlainText.push(charNum);\r\n        }\r\n        \r\n        let arrayCipherText = multiply(keyMathMatrix, arrayPlainText)._data;\r\n        \r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = arrayCipherText[j];\r\n            charNum = ((charNum % 26) + 26) % 26;\r\n            charNum = charNum + 65\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n\r\n    cipherText = cleanText(cipherText);\r\n\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, key) {\r\n    let plainText = \"\";\r\n    let keyCodes = getKeys(key);\r\n    let size = Math.sqrt(keyCodes.length);\r\n    let N = cipherText.length;\r\n\r\n    cipherText = cleanText(cipherText).toUpperCase();\r\n\r\n    let keyMatrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n        let keyArray = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let keyElement = keyCodes.shift();\r\n            keyArray.push(keyElement);\r\n        }\r\n\r\n        keyMatrix.push(keyArray);\r\n    }\r\n\r\n    let determinant = det(matrix(keyMatrix));\r\n    let tempDeterminant = round(determinant);\r\n\r\n    if (tempDeterminant === 0 || gcd(tempDeterminant, 26) !== 1) {\r\n        console.error(\"Key Error! Determinant not a coprime of 26!\")\r\n        return \"-1\";\r\n    }\r\n\r\n    let keyMathMatrix = inv(matrix(keyMatrix));\r\n\r\n    keyMathMatrix = round(multiply(determinant, keyMathMatrix));\r\n\r\n    determinant = round(determinant);\r\n\r\n    determinant = ((determinant % 26) + 26) % 26;\r\n    \r\n    determinant = modInverse(determinant, 26);\r\n\r\n    console.log(determinant);\r\n\r\n    keyMathMatrix = multiply(determinant, keyMathMatrix);\r\n\r\n    for (let i = 0; i < Math.ceil(N / size); i++) {\r\n        let arrayCipherText = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = cipherText.charCodeAt(0) - 65;\r\n            cipherText = cipherText.substring(1);\r\n            arrayCipherText.push(charNum);\r\n        }\r\n\r\n        let arrayPlainText = multiply(keyMathMatrix, arrayCipherText)._data;\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let charNum = arrayPlainText[j];\r\n            charNum = ((charNum % 26) + 26) % 26;\r\n            charNum = charNum + 65\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    \r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90) || (text.charCodeAt(i) >= 97 && text.charCodeAt(i) <= 122)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getKeys(text) {\r\n    let result = [];\r\n    for (let i = 0; i < text.length; i++) {\r\n        let charNum = text.charCodeAt(i) - 97;\r\n        if (charNum < 0) {\r\n            charNum += 32;\r\n        }\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            result.push(charNum);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction modInverse(hillKey, totalLetter) {\r\n    for (let i = 1; i < totalLetter; i++) {\r\n        if ((hillKey * i) % totalLetter === 1) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function validateDeterminant(key) {\r\n    let keyCodes = getKeys(key);\r\n    let size = Math.sqrt(keyCodes.length);\r\n    let keyMatrix = [];\r\n    for (let i = 0; i < size; i++) {\r\n        let keyArray = [];\r\n\r\n        for (let j = 0; j < size; j++) {\r\n            let keyElement = keyCodes.shift();\r\n            keyArray.push(keyElement);\r\n        }\r\n\r\n        keyMatrix.push(keyArray);\r\n    }\r\n\r\n    let determinant = det(matrix(keyMatrix));\r\n    let tempDeterminant = round(determinant);\r\n\r\n    if (tempDeterminant === 0 || gcd(tempDeterminant, 26) !== 1) {\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography} from '@material-ui/core';\r\nimport { encode, decode, splitByFive, validateDeterminant } from '../../Backend/HillBackend.js';\r\n\r\nfunction Hill() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [keyText, setKeyText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    const [errorText, setErrorText] = useState(\"\");\r\n    const [resultErrorText, setResultErrorText] = useState(\"\")\r\n\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    function validateKeyInput() {\r\n        let i = 1;\r\n        // Maks 100 x 100\r\n        while (i < 100000) {\r\n            console.log(i * i);\r\n            if ((i * i) > keyText.length) {\r\n                setErrorText(\"KeyInput should have the length of a SQUARE NUMBER\");\r\n                return false;\r\n            } else if ((i * i) < keyText.length) {\r\n                i += 1;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        if (validateKeyInput()) {\r\n            setErrorText(\"\");\r\n            setResultText(encode(sourceText, keyText.toUpperCase()));\r\n            if (validateDeterminant(keyText)) {\r\n                setResultErrorText(\"\")\r\n            }\r\n            else {\r\n                setResultErrorText(\"Warning! Determinant not a coprime of 26! Ciphertext cannot be decrypted!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, keyText.toUpperCase()));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Hill Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" \r\n                    label=\"Key\" \r\n                    onChange={e => setKeyText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <label style={{ color: \"red\" }}>{errorText}</label>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label style={{ color: \"#ff9900\" }}>{resultErrorText}</label>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hill;\r\n","export class EnigmaMachine {\r\n    constructor(seed) {\r\n        let firstSeed = \"first\" + seed;\r\n        let secondSeed = \"second\" + seed;\r\n        let thirdSeed = \"third\" + seed;\r\n        let fourthSeed = \"fourth\" + seed;\r\n\r\n        this.firstRotor = new EnigmaRotor(firstSeed);\r\n        this.secondRotor = new EnigmaRotor(secondSeed);\r\n        this.thirdRotor = new EnigmaRotor(thirdSeed);\r\n        this.fourthRotor = new EnigmaRotor(fourthSeed);\r\n\r\n        this.firstRotorSpinCount = 0;\r\n        this.secondRotorSpinCount = 0;\r\n        this.thirdRotorSpinCount = 0;\r\n        this.fourthRotorSpinCount = 0;\r\n    }\r\n\r\n    encodeLetter(charNum) {\r\n        let processedCharNum = this.firstRotor.searchCipher(charNum);\r\n        processedCharNum = this.secondRotor.searchCipher(processedCharNum);\r\n        processedCharNum = this.thirdRotor.searchCipher(processedCharNum);\r\n        processedCharNum = this.fourthRotor.searchCipher(processedCharNum);\r\n\r\n        this.rotateRotors();\r\n\r\n        return processedCharNum;\r\n    }\r\n\r\n    decodeLetter(charNum) {\r\n        let processedCharNum = this.fourthRotor.searchPlain(charNum);\r\n        processedCharNum = this.thirdRotor.searchPlain(processedCharNum);\r\n        processedCharNum = this.secondRotor.searchPlain(processedCharNum);\r\n        processedCharNum = this.firstRotor.searchPlain(processedCharNum);\r\n\r\n        this.rotateRotors();\r\n\r\n        return processedCharNum;\r\n    }\r\n\r\n    rotateRotors() {\r\n        this.fourthRotor.spinRotor();\r\n        this.fourthRotorSpinCount++;\r\n\r\n        if (this.fourthRotorSpinCount >= 26) {\r\n            this.fourthRotorSpinCount = 0;\r\n            this.fourthRotor.spinRotor();\r\n            this.thirdRotorSpinCount++;\r\n            if (this.fourthRotorSpinCount >= 26) {\r\n                this.thirdRotorSpinCount = 0;\r\n                this.thirdRotor.spinRotor();\r\n                this.secondRotorSpinCount++;\r\n                if (this.secondRotorSpinCount >= 26) {\r\n                    this.secondRotorSpinCount = 0;\r\n                    this.secondRotor.spinRotor();\r\n                    this.firstRotorSpinCount++;\r\n                    if (this.firstRotorSpinCount >= 26) {\r\n                        this.firstRotorSpinCount = 0;\r\n                        this.firstRotor.spinRotor();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class EnigmaRotor {\r\n    // constructor() {\r\n    //     this.leftRotor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n    //         10, 11, 12, 13, 14, 15, 16, 17,\r\n    //         18, 19, 20, 21, 22, 23, 24, 25\r\n    //     ];\r\n\r\n    //     const rng = seedrandom();\r\n    //     let rightRotor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n    //         10, 11, 12, 13, 14, 15, 16, 17,\r\n    //         18, 19, 20, 21, 22, 23, 24, 25\r\n    //     ];\r\n    //     rightRotor.sort(() => rng.quick() - 0.5);\r\n    //     this.rightRotor = rightRotor;\r\n    // }\r\n\r\n    constructor(seed) {\r\n        this.leftRotor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n\r\n        let shuffleSeed = require('shuffle-seed');\r\n        let rightRotor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n            10, 11, 12, 13, 14, 15, 16, 17,\r\n            18, 19, 20, 21, 22, 23, 24, 25\r\n        ];\r\n        rightRotor = shuffleSeed.shuffle(rightRotor, seed);\r\n        this.rightRotor = rightRotor;\r\n    }\r\n\r\n    spinRotor() {\r\n        this.leftRotor.push(this.leftRotor.shift());\r\n        this.rightRotor.unshift(this.rightRotor.pop());\r\n    }\r\n\r\n    searchCipher(charNum) {\r\n        let rotorKey = this.leftRotor[charNum];\r\n        let rotorIdx = -1;\r\n        for (let i = 0; i < this.rightRotor.length; i++) {\r\n            if (this.rightRotor[i] === rotorKey) {\r\n                rotorIdx = i;\r\n                break;\r\n            }\r\n        }\r\n        return rotorIdx;\r\n    }\r\n\r\n    searchPlain(charNum) {\r\n        let rotorKey = this.rightRotor[charNum];\r\n        let rotorIdx = -1;\r\n        for (let i = 0; i < this.leftRotor.length; i++) {\r\n            if (this.leftRotor[i] === rotorKey) {\r\n                rotorIdx = i;\r\n                break;\r\n            }\r\n        }\r\n        return rotorIdx;\r\n    }\r\n}","import {EnigmaMachine} from \"../Backend/EnigmaMachine.js\";\r\n\r\n/*---------------- CIPHERING FUNCTION ------------------*/\r\n/* Encoding */\r\nexport function encode(plainText, machineSeed) {\r\n    let cipherText = \"\";\r\n    let machine = new EnigmaMachine(machineSeed);\r\n    plainText = cleanText(plainText);\r\n\r\n    for (let i = 0; i < plainText.length; i++) {\r\n        let charNum = plainText.charCodeAt(i) - 65;\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = machine.encodeLetter(charNum);\r\n            charNum = charNum + 65;\r\n            cipherText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return cipherText;\r\n}\r\n\r\n/* Decoding */\r\nexport function decode(cipherText, machineSeed) {\r\n    let plainText = \"\";\r\n    let machine = new EnigmaMachine(machineSeed);\r\n    cipherText = cleanText(cipherText);\r\n\r\n    for (let i = 0; i < cipherText.length; i++) {\r\n        let charNum = cipherText.charCodeAt(i) - 65;\r\n\r\n        if (charNum >= 0 && charNum <= 25) {\r\n            charNum = machine.decodeLetter(charNum);\r\n            charNum = charNum + 65;\r\n            plainText += String.fromCharCode(charNum);\r\n        }\r\n    }\r\n    return plainText;\r\n}\r\n\r\nexport function splitByFive(text) {\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (i % 5 === 0 && i !== 0) {\r\n            result += \" \";\r\n        }\r\n        result += text.charAt(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cleanText(text) {\r\n    let result = \"\";\r\n    text = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n        if ((text.charCodeAt(i) >= 65 && text.charCodeAt(i) <= 90)) {\r\n            result += text.charAt(i);\r\n        }\r\n    }\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { encode, decode, splitByFive } from '../../Backend/EnigmaBackend.js';\r\n\r\nfunction Enigma() {\r\n    /*---------------- STATE DECLARAION ------------------*/\r\n    const [value, setValue] = useState(\"nospaces\");\r\n    const [sourceText, setSourceText] = useState(\"\");\r\n    const [seedText, setSeedText] = useState(\"\");\r\n    const [resultText, setResultText] = useState(\"\");\r\n    let fileReader;\r\n\r\n    function download(data, filename, type) {\r\n        var file = new Blob([data], { type: type });\r\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n            window.navigator.msSaveOrOpenBlob(file, filename);\r\n        else { // Others\r\n            var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n            a.href = url;\r\n            a.download = filename;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function () {\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /*---------------- GUI HANDLERS ------------------*/\r\n    const handleFileRead = (e) => {\r\n        e.preventDefault()\r\n\r\n        const content = fileReader.result;\r\n        setSourceText(content);\r\n    }\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = handleFileRead;\r\n        fileReader.readAsText(file);\r\n    }\r\n\r\n    const handleEncode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(encode(sourceText, seedText));\r\n    }\r\n\r\n    const handleDecode = (e) => {\r\n        e.preventDefault();\r\n        setResultText(decode(sourceText, seedText));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        e.preventDefault();\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttongroup: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        textfield: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '800px',\r\n            },\r\n        },\r\n        textarea: {\r\n            width: '800px',\r\n        },\r\n        divider: {\r\n            marginTop: '40px',\r\n            marginBottom: '40px',\r\n        },\r\n        input: {\r\n            display: \"none\",\r\n        },\r\n        outputtype: {\r\n            marginTop: '20px',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    /*---------------- VIEW ------------------*/\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">Enigma Cipher</Typography>\r\n            <TextareaAutosize aria-label=\"textarea\" placeholder=\"Input Plaintext or Ciphertext\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} onChange={e => setSourceText(e.target.value)} value={sourceText}/>\r\n            <div>\r\n                <input\r\n                    accept=\".txt\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.textfield}>\r\n                <TextField id=\"standard-basic\" label=\"machine-seed\" onChange={e => setSeedText(e.target.value)}/>\r\n            </div>\r\n            <div className={classes.buttongroup}>\r\n                <Button variant=\"contained\" onClick={handleEncode}>\r\n                    Encrypt\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleDecode}>\r\n                    Decrypt\r\n                </Button>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <Divider />\r\n            </div>\r\n            <div className={classes.outputtype}>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Output Type</FormLabel>\r\n                    <RadioGroup aria-label=\"input-type\" name=\"input-type\" value={value} onChange={handleTypeChange}>\r\n                        <div>\r\n                            <FormControlLabel value=\"nospaces\" control={<Radio />} label=\"No Spaces\" />\r\n                            <FormControlLabel value=\"splitbyfive\" control={<Radio />} label=\"Split by Five\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            {\r\n                value === \"nospaces\" ?\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={resultText} />\r\n                :\r\n                <TextareaAutosize aria-label=\"textarea\" placeholder=\"Result Plaintext or CipherText\" rowsMin=\"20\" rowsMax=\"20\" className={classes.textarea} value={splitByFive(resultText)}/>\r\n            }\r\n            <div>\r\n                <label htmlFor=\"contained-download-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={() => download(resultText, \"Ciphertext\", \"txt\")}>\r\n                        Save To File\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Enigma;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FullVigenere from './Components/FullVigenere/FullVigenere.js';\r\nimport StandardVigenere from './Components/StandardVigenere/StandardVigenere.js';\r\nimport AutoKeyVigenere from './Components/AutoKeyVigenere/AutoKeyVigenere.js';\r\nimport ExtendedVigenere from './Components/ExtendedVigenere/ExtendedVigenere.js';\r\nimport Playfair from \"./Components/Playfair/Playfair.js\";\r\nimport SuperEncryption from './Components/SuperEncryption/SuperEncryption.js';\r\nimport Affine from './Components/Affine/Affine.js';\r\nimport Hill from './Components/Hill/Hill.js';\r\nimport Enigma from './Components/Enigma/Enigma.js';\r\n\r\nfunction Home() {\r\n    const [cipherId, setCipherId] = useState(0)\r\n\r\n    const drawerWidth = 240;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerContainer: {\r\n            overflow: 'auto',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n          marginLeft: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const cipherList = [\r\n        \"Standard Vigenere Cipher\",\r\n        \"Full Vigenere Cipher\",\r\n        \"Auto-Key Vigenere Cipher\",\r\n        \"Extended Vigenere Cipher\",\r\n        \"Playfair Cipher\",\r\n        \"Super Encryption\",\r\n        \"Affine Cipher\",\r\n        \"Hill Cipher\",\r\n        \"Enigma Cipher\"\r\n    ];\r\n\r\n    function handleChange(index) {\r\n        if (index === 0) {\r\n            setCipherId(0);\r\n        }\r\n        else if (index === 1) {\r\n            setCipherId(1);\r\n        }\r\n        else if (index === 2) {\r\n            setCipherId(2);\r\n        }\r\n        else if (index === 3) {\r\n            setCipherId(3);\r\n        }\r\n        else if (index === 4) {\r\n            setCipherId(4);\r\n        }\r\n        else if (index === 5) {\r\n            setCipherId(5);\r\n        }\r\n        else if (index === 6) {\r\n            setCipherId(6);\r\n        }\r\n        else if (index === 7) {\r\n            setCipherId(7);\r\n        }\r\n        else if (index === 8) {\r\n            setCipherId(8);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              CrypTK\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" noWrap className={classes.title}>\r\n              By Ferdy and Meyer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              {cipherList.map((text, index) => (\r\n                <ListItem button key={text} onClick={() => handleChange(index)} selected={cipherId === index}>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <Toolbar />\r\n          <div>\r\n            {\r\n                cipherId === 0 ? <StandardVigenere />\r\n                :cipherId === 1 ? <FullVigenere />\r\n                :cipherId === 2 ? <AutoKeyVigenere />\r\n                :cipherId === 3 ? <ExtendedVigenere />\r\n                :cipherId === 4 ? <Playfair />\r\n                :cipherId === 5 ? <SuperEncryption />\r\n                :cipherId === 6 ? <Affine />\r\n                :cipherId === 7 ? <Hill />\r\n                :cipherId === 8 ? <Enigma />\r\n                :null\r\n            }\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}